extends layout

block content
  div.container
    div.jumbotron
      h2: i.ion-android-checkmark-circle Proof Assistant
        small(style="font-size: 20px;") beta
      p.pFont Proof Assistant is a platform to enable Logic students to write, 
        | verify, and store #[a(href="https://en.wikipedia.org/wiki/System_L") System L] 
        | style Natural Deduction proofs. Proofs are checked for correctness 
        | in real-time, and provides informative error messages. The project 
        | was developed as part of the #[a(href="http://l4f.cecs.anu.edu.au/") Logic4Fun] 
        | initiative during #[a(href="http://lss.cecs.anu.edu.au/") Logic Summer School], 2015.
      h4 Software Stack      
      li.liFont Javascript
      li.liFont Node.js
      li.liFont MongoDB
      li.liFont ANTLR4
      li.liFont Bootstrap
      li.liFont Jade
      br
      h4 Developed by:
      li.liFont #[a(href="https://www.surajx.in/") Suraj Narayanan Sasikumar]
      li.liFont Boris Repasky
      p.pFont Advisor: Prof. #[a(href="https://users.cecs.anu.edu.au/~jks/") John Slaney]
      h3 Getting Started
      h4 Setup an Account
      p.pFont #[a(href="/login") Login/SignUp] with any valid email.
        | E-mail is just a placeholder for the username, essentially you can 
        | give a random valid email and password as long as you can remember 
        | it.
      h4 Dashboard
      p.pFont The dashboard is where you create new proofs, and also where your existing 
        | proofs are listed along with there current status.
      center
        img.img-thumbnail(src="/img/dashboard.png")
      br
      p.pFont The #[button.btn.btn-lg.btn-success(type="button") NEW PROOF] button brings 
        | up a pop-up dialogue where you can enter the #[a(href="https://en.wikipedia.org/wiki/Sequent") sequent] 
        | you want to prove. Typing the sequent is very easy, the following short-keys 
        | auto-convert to their equivalent logical connectives as you type.
        li.liFont \n:&nbsp;&nbsp;¬&nbsp;(<u><b>n</b></u>egation)
        li.liFont \a:&nbsp;&nbsp;∧&nbsp;(<u><b>a</b></u>nd)
        li.liFont \o:&nbsp;&nbsp;∨&nbsp;(<u><b>o</b></u>r)
        li.liFont \i:&nbsp;&nbsp;→&nbsp;(<u><b>i</b></u>mplication)
        li.liFont \e:&nbsp;&nbsp;⊢&nbsp;(<u><b>e</b></u>ntails)
        li.liFont \t:&nbsp;&nbsp;⊤&nbsp;(<u><b>t</b></u>rue)
        li.liFont \f:&nbsp;&nbsp;⊥&nbsp;(<u><b>f</b></u>alse)
      p.pFont Example: The sequent "¬(p → q) ⊢ p ∧ ¬q" should be typed as 
        | "\n(p \i q) \e p \a \nq". It may look daunting at first, but as you 
        | type, it'll becomes natural.
      center
        img.img-thumbnail(src="/img/create_new_proof.png")
      br
      h3 Proof Page
      p.pFont This is the page where you actually write the proof. All premises of 
        | the sequent is auto-populated for you as assumption lines.
      center
        img.img-thumbnail(src="/img/proof_page.png")
      p.pFont The next proof line is entered using the fields provided at the bottom. 
        | The same short-keys mentioned earlier can be used to type in the 
        | connectives. Also, it is not necessary to press the #[button.btn.btn-primary(type="button"): span.glyphicon.glyphicon-plus(aria-hidden="true")] 
        | button every time, pressing the enter key on any of the input fields submits 
        | your proof line for validation. If you dont know what these fields are 
        | please read the excellent #[a(href="http://users.cecs.anu.edu.au/~jks/LogicNotes/index.html") introduction] 
        | to Propositional Logic and System L style Natural Deduction proofs by Prof. John Slaney.
      p.pFont The platform also provides the ability to delete or edit rows, provided the 
        | change does not break the validity of the proof. When a proof line is 
        | deleted or edited the proof is <u>not</u> auto-saved on the server. 
        | You can see that the SAVE button would be now red in color, indicating 
        | an unsaved proof.
      br
      h5 Error Messages
      p.pFont Submission of the new proof line triggers validation of the entire proof. 
        | Only if the entire proof is valid, the new proof line is added. In 
        | case of an invalid proof line, a corresponding error message is displayed.
      center
        img.img-thumbnail(src="/img/error_message.png")
      br
      h5 Features
      p.pFont The proof is validated in-browser, i.e. the proof is not sent to the 
        | server each time a line is added. This allows fast verification of large 
        | proofs and also the ability to use the tool offline. If an internet 
        | connection is available, any change made to the proof is auto-saved 
        | on the server. The colour of the "SAVE" button indicates whether the 
        | proof was successfully saved on the server or not. #[button.btn.btn-success(type="button") Save] 
        | button indicates that the latest proof is saved, while #[button.btn.btn-danger(type="button") Save] 
        | button indicates that there are some changes in the proof that are not saved 
        | in the server. Note that on each save request the proof is validated 
        | on the server-side as well.
      br
      p.pFont When the line that completes the proof is entered, and the proof is 
        | validated, the status of the proof changes to "SUCCESS".
      center
        img.img-thumbnail(src="/img/write_proof.png")
      br
      p.pFont Enjoy Natural Deductions!
